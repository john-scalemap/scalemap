{
 "Resources": {
  "ScaleMapTableD1C6C54B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI1PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI1SK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI2PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "GSI2SK",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "GSI1",
      "KeySchema": [
       {
        "AttributeName": "GSI1PK",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "GSI1SK",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     },
     {
      "IndexName": "GSI2",
      "KeySchema": [
       {
        "AttributeName": "GSI2PK",
        "KeyType": "HASH"
       },
       {
        "AttributeName": "GSI2SK",
        "KeyType": "RANGE"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    },
    "StreamSpecification": {
     "StreamViewType": "NEW_AND_OLD_IMAGES"
    },
    "TableName": "scalemap-dev",
    "TimeToLiveSpecification": {
     "AttributeName": "TTL",
     "Enabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapTable/Resource"
   }
  },
  "DocumentsBucket9EC9DEB9": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "scalemap-documents-dev",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET",
        "POST",
        "PUT"
       ],
       "AllowedOrigins": [
        "*"
       ],
       "MaxAge": 300
      }
     ]
    },
    "LifecycleConfiguration": {
     "Rules": [
      {
       "Id": "cost-optimization",
       "Status": "Enabled",
       "Transitions": [
        {
         "StorageClass": "STANDARD_IA",
         "TransitionInDays": 30
        },
        {
         "StorageClass": "GLACIER",
         "TransitionInDays": 90
        }
       ]
      }
     ]
    },
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/DocumentsBucket/Resource"
   }
  },
  "DocumentsBucketNotifications871115F2": {
   "Type": "Custom::S3BucketNotifications",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "DocumentsBucket9EC9DEB9"
    },
    "NotificationConfiguration": {
     "LambdaFunctionConfigurations": [
      {
       "Events": [
        "s3:ObjectCreated:*"
       ],
       "Filter": {
        "Key": {
         "FilterRules": [
          {
           "Name": "prefix",
           "Value": "uploads/"
          }
         ]
        }
       },
       "LambdaFunctionArn": {
        "Fn::GetAtt": [
         "ProcessDocumentFunctionC59F63F6",
         "Arn"
        ]
       }
      }
     ]
    },
    "Managed": true,
    "SkipDestinationValidation": false
   },
   "DependsOn": [
    "DocumentsBucketAllowBucketNotificationsToScaleMapDevProcessDocumentFunction8AC314D7027ADADD"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/DocumentsBucket/Notifications/Resource"
   }
  },
  "DocumentsBucketAllowBucketNotificationsToScaleMapDevProcessDocumentFunction8AC314D7027ADADD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ProcessDocumentFunctionC59F63F6",
      "Arn"
     ]
    },
    "Principal": "s3.amazonaws.com",
    "SourceAccount": "884337373956",
    "SourceArn": {
     "Fn::GetAtt": [
      "DocumentsBucket9EC9DEB9",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/DocumentsBucket/AllowBucketNotificationsToScaleMapDevProcessDocumentFunction8AC314D7"
   }
  },
  "DeadLetterQueue9F481546": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "MessageRetentionPeriod": 1209600,
    "QueueName": "scalemap-dlq-dev"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/DeadLetterQueue/Resource"
   }
  },
  "LoginFunctionServiceRole74B42ABA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LoginFunction/ServiceRole/Resource"
   }
  },
  "LoginFunctionServiceRoleDefaultPolicy2FE1C77C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LoginFunctionServiceRoleDefaultPolicy2FE1C77C",
    "Roles": [
     {
      "Ref": "LoginFunctionServiceRole74B42ABA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LoginFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LoginFunction66F090C6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-login-dev",
    "Handler": "functions/auth/login.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "LoginFunctionServiceRole74B42ABA",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "LoginFunctionServiceRoleDefaultPolicy2FE1C77C",
    "LoginFunctionServiceRole74B42ABA"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LoginFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LoginFunctionLogRetentionB59EE088": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LoginFunction66F090C6"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LoginFunction/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs22.x",
    "Timeout": 900,
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.2819175352ad1ce0dae768e83fc328fb70fb5f10b4a8ff0ccbcb791f02b0716d",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RefreshTokenFunctionServiceRole7D6AF27F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RefreshTokenFunction/ServiceRole/Resource"
   }
  },
  "RefreshTokenFunctionServiceRoleDefaultPolicy47C7EF3C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RefreshTokenFunctionServiceRoleDefaultPolicy47C7EF3C",
    "Roles": [
     {
      "Ref": "RefreshTokenFunctionServiceRole7D6AF27F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RefreshTokenFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RefreshTokenFunction37E34807": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-refresh-token-dev",
    "Handler": "functions/auth/refresh-token.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "RefreshTokenFunctionServiceRole7D6AF27F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "RefreshTokenFunctionServiceRoleDefaultPolicy47C7EF3C",
    "RefreshTokenFunctionServiceRole7D6AF27F"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RefreshTokenFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RefreshTokenFunctionLogRetention62D16626": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RefreshTokenFunction37E34807"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RefreshTokenFunction/LogRetention/Resource"
   }
  },
  "RefreshTokenFunctionScaleMapDevJwtAuthorizer7FB6E645Permissions0B2DB8B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RefreshTokenFunction37E34807",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/authorizers/",
       {
        "Ref": "JwtAuthorizer08CECD9F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RefreshTokenFunction/ScaleMapDevJwtAuthorizer7FB6E645:Permissions"
   }
  },
  "RegisterFunctionServiceRoleDB8F6C89": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RegisterFunction/ServiceRole/Resource"
   }
  },
  "RegisterFunctionServiceRoleDefaultPolicyC4352E3C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RegisterFunctionServiceRoleDefaultPolicyC4352E3C",
    "Roles": [
     {
      "Ref": "RegisterFunctionServiceRoleDB8F6C89"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RegisterFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RegisterFunction735506DF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-register-dev",
    "Handler": "functions/auth/register.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "RegisterFunctionServiceRoleDB8F6C89",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "RegisterFunctionServiceRoleDefaultPolicyC4352E3C",
    "RegisterFunctionServiceRoleDB8F6C89"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RegisterFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "RegisterFunctionLogRetention8E4BDC14": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RegisterFunction735506DF"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/RegisterFunction/LogRetention/Resource"
   }
  },
  "CreateCompanyFunctionServiceRoleDBB9C1CF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateCompanyFunction/ServiceRole/Resource"
   }
  },
  "CreateCompanyFunctionServiceRoleDefaultPolicy7A2CB781": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateCompanyFunctionServiceRoleDefaultPolicy7A2CB781",
    "Roles": [
     {
      "Ref": "CreateCompanyFunctionServiceRoleDBB9C1CF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateCompanyFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateCompanyFunctionB2EDBE20": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-create-company-dev",
    "Handler": "functions/company/create-company.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CreateCompanyFunctionServiceRoleDBB9C1CF",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "CreateCompanyFunctionServiceRoleDefaultPolicy7A2CB781",
    "CreateCompanyFunctionServiceRoleDBB9C1CF"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateCompanyFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateCompanyFunctionLogRetention299B7396": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CreateCompanyFunctionB2EDBE20"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateCompanyFunction/LogRetention/Resource"
   }
  },
  "GetCompanyFunctionServiceRoleDEA2282F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetCompanyFunction/ServiceRole/Resource"
   }
  },
  "GetCompanyFunctionServiceRoleDefaultPolicy3E5CAADC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCompanyFunctionServiceRoleDefaultPolicy3E5CAADC",
    "Roles": [
     {
      "Ref": "GetCompanyFunctionServiceRoleDEA2282F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetCompanyFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCompanyFunction40521299": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-get-company-dev",
    "Handler": "functions/company/get-company.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "GetCompanyFunctionServiceRoleDEA2282F",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetCompanyFunctionServiceRoleDefaultPolicy3E5CAADC",
    "GetCompanyFunctionServiceRoleDEA2282F"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetCompanyFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetCompanyFunctionLogRetention28CD26D3": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetCompanyFunction40521299"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetCompanyFunction/LogRetention/Resource"
   }
  },
  "CreateAssessmentFunctionServiceRole1F65987E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateAssessmentFunction/ServiceRole/Resource"
   }
  },
  "CreateAssessmentFunctionServiceRoleDefaultPolicy388FB5C2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CreateAssessmentFunctionServiceRoleDefaultPolicy388FB5C2",
    "Roles": [
     {
      "Ref": "CreateAssessmentFunctionServiceRole1F65987E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateAssessmentFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CreateAssessmentFunction9342934F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-create-assessment-dev",
    "Handler": "functions/assessment/create-assessment.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "CreateAssessmentFunctionServiceRole1F65987E",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "CreateAssessmentFunctionServiceRoleDefaultPolicy388FB5C2",
    "CreateAssessmentFunctionServiceRole1F65987E"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateAssessmentFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CreateAssessmentFunctionLogRetentionEEA68C5D": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "CreateAssessmentFunction9342934F"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CreateAssessmentFunction/LogRetention/Resource"
   }
  },
  "GetAssessmentFunctionServiceRole5126DA07": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetAssessmentFunction/ServiceRole/Resource"
   }
  },
  "GetAssessmentFunctionServiceRoleDefaultPolicy95FF1DE8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetAssessmentFunctionServiceRoleDefaultPolicy95FF1DE8",
    "Roles": [
     {
      "Ref": "GetAssessmentFunctionServiceRole5126DA07"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetAssessmentFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetAssessmentFunction53DE8AFB": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-get-assessment-dev",
    "Handler": "functions/assessment/get-assessment.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "GetAssessmentFunctionServiceRole5126DA07",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "GetAssessmentFunctionServiceRoleDefaultPolicy95FF1DE8",
    "GetAssessmentFunctionServiceRole5126DA07"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetAssessmentFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetAssessmentFunctionLogRetentionB7D4D7F0": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetAssessmentFunction53DE8AFB"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/GetAssessmentFunction/LogRetention/Resource"
   }
  },
  "UpdateResponsesFunctionServiceRoleC79C8D19": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UpdateResponsesFunction/ServiceRole/Resource"
   }
  },
  "UpdateResponsesFunctionServiceRoleDefaultPolicy9EF23BE3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UpdateResponsesFunctionServiceRoleDefaultPolicy9EF23BE3",
    "Roles": [
     {
      "Ref": "UpdateResponsesFunctionServiceRoleC79C8D19"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UpdateResponsesFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UpdateResponsesFunctionBF692635": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-update-responses-dev",
    "Handler": "functions/assessment/update-responses.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "UpdateResponsesFunctionServiceRoleC79C8D19",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "UpdateResponsesFunctionServiceRoleDefaultPolicy9EF23BE3",
    "UpdateResponsesFunctionServiceRoleC79C8D19"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UpdateResponsesFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UpdateResponsesFunctionLogRetention511E2235": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "UpdateResponsesFunctionBF692635"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UpdateResponsesFunction/LogRetention/Resource"
   }
  },
  "UploadHandlerFunctionServiceRole483D683C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UploadHandlerFunction/ServiceRole/Resource"
   }
  },
  "UploadHandlerFunctionServiceRoleDefaultPolicyBB324832": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UploadHandlerFunctionServiceRoleDefaultPolicyBB324832",
    "Roles": [
     {
      "Ref": "UploadHandlerFunctionServiceRole483D683C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UploadHandlerFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UploadHandlerFunction1DEB4309": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-upload-handler-dev",
    "Handler": "functions/documents/upload-handler.handler",
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "UploadHandlerFunctionServiceRole483D683C",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "UploadHandlerFunctionServiceRoleDefaultPolicyBB324832",
    "UploadHandlerFunctionServiceRole483D683C"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UploadHandlerFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "UploadHandlerFunctionLogRetentionFC59CE78": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "UploadHandlerFunction1DEB4309"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/UploadHandlerFunction/LogRetention/Resource"
   }
  },
  "ProcessDocumentFunctionServiceRole89CDCA16": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ProcessDocumentFunction/ServiceRole/Resource"
   }
  },
  "ProcessDocumentFunctionServiceRoleDefaultPolicyB341BFEF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail",
        "textract:AnalyzeDocument",
        "textract:GetDocumentAnalysis",
        "textract:StartDocumentAnalysis"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ProcessDocumentFunctionServiceRoleDefaultPolicyB341BFEF",
    "Roles": [
     {
      "Ref": "ProcessDocumentFunctionServiceRole89CDCA16"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ProcessDocumentFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ProcessDocumentFunctionC59F63F6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-process-document-dev",
    "Handler": "functions/documents/process-document.handler",
    "MemorySize": 2048,
    "Role": {
     "Fn::GetAtt": [
      "ProcessDocumentFunctionServiceRole89CDCA16",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 900
   },
   "DependsOn": [
    "ProcessDocumentFunctionServiceRoleDefaultPolicyB341BFEF",
    "ProcessDocumentFunctionServiceRole89CDCA16"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ProcessDocumentFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ProcessDocumentFunctionLogRetentionBFCFC4EB": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ProcessDocumentFunctionC59F63F6"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ProcessDocumentFunction/LogRetention/Resource"
   }
  },
  "HealthFunctionServiceRole04552894": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/HealthFunction/ServiceRole/Resource"
   }
  },
  "HealthFunctionServiceRoleDefaultPolicy57228674": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "DeadLetterQueue9F481546",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ScaleMapTableD1C6C54B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ScaleMapTableD1C6C54B",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "DocumentsBucket9EC9DEB9",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DocumentsBucket9EC9DEB9",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "ses:SendEmail",
        "ses:SendRawEmail"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "HealthFunctionServiceRoleDefaultPolicy57228674",
    "Roles": [
     {
      "Ref": "HealthFunctionServiceRole04552894"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/HealthFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "HealthFunction19D7724A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-884337373956-eu-west-1",
     "S3Key": "779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc.zip"
    },
    "DeadLetterConfig": {
     "TargetArn": {
      "Fn::GetAtt": [
       "DeadLetterQueue9F481546",
       "Arn"
      ]
     }
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "ScaleMapTableD1C6C54B"
      },
      "DOCUMENTS_BUCKET": {
       "Ref": "DocumentsBucket9EC9DEB9"
      },
      "STAGE": "dev",
      "REGION": "eu-west-1",
      "DLQ_URL": {
       "Ref": "DeadLetterQueue9F481546"
      }
     }
    },
    "FunctionName": "scalemap-health-dev",
    "Handler": "functions/health.handler",
    "MemorySize": 512,
    "Role": {
     "Fn::GetAtt": [
      "HealthFunctionServiceRole04552894",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 30
   },
   "DependsOn": [
    "HealthFunctionServiceRoleDefaultPolicy57228674",
    "HealthFunctionServiceRole04552894"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/HealthFunction/Resource",
    "aws:asset:path": "asset.779df4660804a8352ffcc29c7d23d5fe7f9258edb332388078a9e5641f8939fc",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "HealthFunctionLogRetentionC7891B18": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "HealthFunction19D7724A"
       }
      ]
     ]
    },
    "RetentionInDays": 30
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/HealthFunction/LogRetention/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:PutBucketNotification",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "Roles": [
     {
      "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
   }
  },
  "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
    "Code": {
     "ZipFile": "import boto3  # type: ignore\nimport json\nimport logging\nimport urllib.request\n\ns3 = boto3.client(\"s3\")\n\nEVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'\nCONFIGURATION_TYPES = [\"TopicConfigurations\", \"QueueConfigurations\", \"LambdaFunctionConfigurations\"]\n\ndef handler(event: dict, context):\n  response_status = \"SUCCESS\"\n  error_message = \"\"\n  try:\n    props = event[\"ResourceProperties\"]\n    notification_configuration = props[\"NotificationConfiguration\"]\n    managed = props.get('Managed', 'true').lower() == 'true'\n    skipDestinationValidation = props.get('SkipDestinationValidation', 'false').lower() == 'true'\n    stack_id = event['StackId']\n    old = event.get(\"OldResourceProperties\", {}).get(\"NotificationConfiguration\", {})\n    if managed:\n      config = handle_managed(event[\"RequestType\"], notification_configuration)\n    else:\n      config = handle_unmanaged(props[\"BucketName\"], stack_id, event[\"RequestType\"], notification_configuration, old)\n    s3.put_bucket_notification_configuration(Bucket=props[\"BucketName\"], NotificationConfiguration=config, SkipDestinationValidation=skipDestinationValidation)\n  except Exception as e:\n    logging.exception(\"Failed to put bucket notification configuration\")\n    response_status = \"FAILED\"\n    error_message = f\"Error: {str(e)}. \"\n  finally:\n    submit_response(event, context, response_status, error_message)\n\ndef handle_managed(request_type, notification_configuration):\n  if request_type == 'Delete':\n    return {}\n  return notification_configuration\n\ndef handle_unmanaged(bucket, stack_id, request_type, notification_configuration, old):\n  def get_id(n):\n    n['Id'] = ''\n    sorted_notifications = sort_filter_rules(n)\n    strToHash=json.dumps(sorted_notifications, sort_keys=True).replace('\"Name\": \"prefix\"', '\"Name\": \"Prefix\"').replace('\"Name\": \"suffix\"', '\"Name\": \"Suffix\"')\n    return f\"{stack_id}-{hash(strToHash)}\"\n  def with_id(n):\n    n['Id'] = get_id(n)\n    return n\n\n  external_notifications = {}\n  existing_notifications = s3.get_bucket_notification_configuration(Bucket=bucket)\n  for t in CONFIGURATION_TYPES:\n    if request_type == 'Update':\n        old_incoming_ids = [get_id(n) for n in old.get(t, [])]\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not get_id(n) in old_incoming_ids]      \n    elif request_type == 'Delete':\n        external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f\"{stack_id}-\")]\n    elif request_type == 'Create':\n        external_notifications[t] = [n for n in existing_notifications.get(t, [])]\n  if EVENTBRIDGE_CONFIGURATION in existing_notifications:\n    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  if request_type == 'Delete':\n    return external_notifications\n\n  notifications = {}\n  for t in CONFIGURATION_TYPES:\n    external = external_notifications.get(t, [])\n    incoming = [with_id(n) for n in notification_configuration.get(t, [])]\n    notifications[t] = external + incoming\n\n  if EVENTBRIDGE_CONFIGURATION in notification_configuration:\n    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]\n  elif EVENTBRIDGE_CONFIGURATION in external_notifications:\n    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]\n\n  return notifications\n\ndef submit_response(event: dict, context, response_status: str, error_message: str):\n  response_body = json.dumps(\n    {\n      \"Status\": response_status,\n      \"Reason\": f\"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}\",\n      \"PhysicalResourceId\": event.get(\"PhysicalResourceId\") or event[\"LogicalResourceId\"],\n      \"StackId\": event[\"StackId\"],\n      \"RequestId\": event[\"RequestId\"],\n      \"LogicalResourceId\": event[\"LogicalResourceId\"],\n      \"NoEcho\": False,\n    }\n  ).encode(\"utf-8\")\n  headers = {\"content-type\": \"\", \"content-length\": str(len(response_body))}\n  try:\n    req = urllib.request.Request(url=event[\"ResponseURL\"], headers=headers, data=response_body, method=\"PUT\")\n    with urllib.request.urlopen(req) as response:\n      print(response.read().decode(\"utf-8\"))\n    print(\"Status code: \" + response.reason)\n  except Exception as e:\n      print(\"send(..) failed executing request.urlopen(..): \" + str(e))\n\ndef sort_filter_rules(json_obj):\n  if not isinstance(json_obj, dict):\n      return json_obj\n  for key, value in json_obj.items():\n      if isinstance(value, dict):\n          json_obj[key] = sort_filter_rules(value)\n      elif isinstance(value, list):\n          json_obj[key] = [sort_filter_rules(item) for item in value]\n  if \"Filter\" in json_obj and \"Key\" in json_obj[\"Filter\"] and \"FilterRules\" in json_obj[\"Filter\"][\"Key\"]:\n      filter_rules = json_obj[\"Filter\"][\"Key\"][\"FilterRules\"]\n      sorted_filter_rules = sorted(filter_rules, key=lambda x: x[\"Name\"])\n      json_obj[\"Filter\"][\"Key\"][\"FilterRules\"] = sorted_filter_rules\n  return json_obj"
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 300
   },
   "DependsOn": [
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
   }
  },
  "JwtAuthorizer08CECD9F": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "AuthorizerResultTtlInSeconds": 300,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "RefreshTokenFunction37E34807",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "RefreshTokenFunction37E34807",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "RefreshTokenFunction37E34807",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.Authorization",
    "Name": "scalemap-jwt-authorizer-dev",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    },
    "Type": "TOKEN"
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/JwtAuthorizer/Resource"
   }
  },
  "ScaleMapApi2204383E": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "ScaleMap API for dev environment",
    "Name": "ScaleMap API - dev"
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Resource"
   }
  },
  "ScaleMapApiCloudWatchRole240E0A1B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/CloudWatchRole/Resource"
   }
  },
  "ScaleMapApiAccountE7812CF1": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "ScaleMapApiCloudWatchRole240E0A1B",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "ScaleMapApi2204383E"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Account"
   }
  },
  "ScaleMapApiDeployment77EBDD9Defb5a1a2af5a4ea9ed711cf36e04cbc8": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "ScaleMap API for dev environment",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "DependsOn": [
    "JwtAuthorizer08CECD9F",
    "ScaleMapApiassessmentGET1FE7CC79",
    "ScaleMapApiassessmentOPTIONSC8FBF396",
    "ScaleMapApiassessmentPOSTA148887C",
    "ScaleMapApiassessmentC3736B5E",
    "ScaleMapApiassessmentresponsesOPTIONS54E7E8FB",
    "ScaleMapApiassessmentresponsesPUTE7F381A0",
    "ScaleMapApiassessmentresponses1B5A68B6",
    "ScaleMapApiauthloginOPTIONS86D709F4",
    "ScaleMapApiauthloginPOSTE1CB51A5",
    "ScaleMapApiauthlogin7F8100CE",
    "ScaleMapApiauthOPTIONSEE73EF88",
    "ScaleMapApiauthrefreshOPTIONSF8DE41B6",
    "ScaleMapApiauthrefreshPOST6EC4C378",
    "ScaleMapApiauthrefresh503A46F4",
    "ScaleMapApiauthregisterOPTIONSFEDF5216",
    "ScaleMapApiauthregisterPOST1086F82F",
    "ScaleMapApiauthregisterBB7044BD",
    "ScaleMapApiauthBA436AC9",
    "ScaleMapApicompanyGET9784E0DD",
    "ScaleMapApicompanyOPTIONS38C4F9CB",
    "ScaleMapApicompanyPOST6EAA0F4F",
    "ScaleMapApicompanyE86C5AA2",
    "ScaleMapApidocumentsOPTIONSA3A85304",
    "ScaleMapApidocumentsF359908A",
    "ScaleMapApidocumentsuploadOPTIONS2F20AF31",
    "ScaleMapApidocumentsuploadPOST8F5412FD",
    "ScaleMapApidocumentsupload9463C0ED",
    "ScaleMapApihealthGET37CFB43A",
    "ScaleMapApihealthOPTIONSB7ECEA33",
    "ScaleMapApihealthD68D4E2A",
    "ScaleMapApiOPTIONS1BF74AAB"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Deployment/Resource",
    "aws:cdk:do-not-refactor": true
   }
  },
  "ScaleMapApiDeploymentStageprodF4DD3120": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "ScaleMapApiDeployment77EBDD9Defb5a1a2af5a4ea9ed711cf36e04cbc8"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "ScaleMapApiAccountE7812CF1"
   ],
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/DeploymentStage.prod/Resource"
   }
  },
  "ScaleMapApiOPTIONS1BF74AAB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "ScaleMapApi2204383E",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/OPTIONS/Resource"
   }
  },
  "ScaleMapApihealthD68D4E2A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ScaleMapApi2204383E",
      "RootResourceId"
     ]
    },
    "PathPart": "health",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/health/Resource"
   }
  },
  "ScaleMapApihealthOPTIONSB7ECEA33": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApihealthD68D4E2A"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/health/OPTIONS/Resource"
   }
  },
  "ScaleMapApihealthGETApiPermissionScaleMapDevScaleMapApiE4F3E3DDGEThealthC78D496A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HealthFunction19D7724A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/health/GET/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.GET..health"
   }
  },
  "ScaleMapApihealthGETApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDGEThealth7ACEA346": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "HealthFunction19D7724A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/GET/health"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/health/GET/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.GET..health"
   }
  },
  "ScaleMapApihealthGET37CFB43A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "HealthFunction19D7724A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApihealthD68D4E2A"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/health/GET/Resource"
   }
  },
  "ScaleMapApiauthBA436AC9": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ScaleMapApi2204383E",
      "RootResourceId"
     ]
    },
    "PathPart": "auth",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/Resource"
   }
  },
  "ScaleMapApiauthOPTIONSEE73EF88": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApiauthBA436AC9"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/OPTIONS/Resource"
   }
  },
  "ScaleMapApiauthlogin7F8100CE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ScaleMapApiauthBA436AC9"
    },
    "PathPart": "login",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/login/Resource"
   }
  },
  "ScaleMapApiauthloginOPTIONS86D709F4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApiauthlogin7F8100CE"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/login/OPTIONS/Resource"
   }
  },
  "ScaleMapApiauthloginPOSTApiPermissionScaleMapDevScaleMapApiE4F3E3DDPOSTauthlogin8D94DA63": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LoginFunction66F090C6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/POST/auth/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/login/POST/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.POST..auth.login"
   }
  },
  "ScaleMapApiauthloginPOSTApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDPOSTauthloginE21EE253": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LoginFunction66F090C6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/POST/auth/login"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/login/POST/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.POST..auth.login"
   }
  },
  "ScaleMapApiauthloginPOSTE1CB51A5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "LoginFunction66F090C6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApiauthlogin7F8100CE"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/login/POST/Resource"
   }
  },
  "ScaleMapApiauthregisterBB7044BD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ScaleMapApiauthBA436AC9"
    },
    "PathPart": "register",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/register/Resource"
   }
  },
  "ScaleMapApiauthregisterOPTIONSFEDF5216": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApiauthregisterBB7044BD"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/register/OPTIONS/Resource"
   }
  },
  "ScaleMapApiauthregisterPOSTApiPermissionScaleMapDevScaleMapApiE4F3E3DDPOSTauthregisterE2A68DB9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RegisterFunction735506DF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/POST/auth/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/register/POST/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.POST..auth.register"
   }
  },
  "ScaleMapApiauthregisterPOSTApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDPOSTauthregister06000029": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RegisterFunction735506DF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/POST/auth/register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/register/POST/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.POST..auth.register"
   }
  },
  "ScaleMapApiauthregisterPOST1086F82F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RegisterFunction735506DF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApiauthregisterBB7044BD"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/register/POST/Resource"
   }
  },
  "ScaleMapApiauthrefresh503A46F4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ScaleMapApiauthBA436AC9"
    },
    "PathPart": "refresh",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/refresh/Resource"
   }
  },
  "ScaleMapApiauthrefreshOPTIONSF8DE41B6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApiauthrefresh503A46F4"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/refresh/OPTIONS/Resource"
   }
  },
  "ScaleMapApiauthrefreshPOSTApiPermissionScaleMapDevScaleMapApiE4F3E3DDPOSTauthrefresh359E7A47": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RefreshTokenFunction37E34807",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/POST/auth/refresh"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/refresh/POST/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.POST..auth.refresh"
   }
  },
  "ScaleMapApiauthrefreshPOSTApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDPOSTauthrefresh9CC0EF91": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RefreshTokenFunction37E34807",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/POST/auth/refresh"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/refresh/POST/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.POST..auth.refresh"
   }
  },
  "ScaleMapApiauthrefreshPOST6EC4C378": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RefreshTokenFunction37E34807",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApiauthrefresh503A46F4"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/auth/refresh/POST/Resource"
   }
  },
  "ScaleMapApicompanyE86C5AA2": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ScaleMapApi2204383E",
      "RootResourceId"
     ]
    },
    "PathPart": "company",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/Resource"
   }
  },
  "ScaleMapApicompanyOPTIONS38C4F9CB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApicompanyE86C5AA2"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/OPTIONS/Resource"
   }
  },
  "ScaleMapApicompanyPOSTApiPermissionScaleMapDevScaleMapApiE4F3E3DDPOSTcompanyCC044152": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateCompanyFunctionB2EDBE20",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/POST/company"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/POST/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.POST..company"
   }
  },
  "ScaleMapApicompanyPOSTApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDPOSTcompanyF73BAA7D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateCompanyFunctionB2EDBE20",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/POST/company"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/POST/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.POST..company"
   }
  },
  "ScaleMapApicompanyPOST6EAA0F4F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer08CECD9F"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateCompanyFunctionB2EDBE20",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApicompanyE86C5AA2"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/POST/Resource"
   }
  },
  "ScaleMapApicompanyGETApiPermissionScaleMapDevScaleMapApiE4F3E3DDGETcompany5C0E9890": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCompanyFunction40521299",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/GET/company"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/GET/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.GET..company"
   }
  },
  "ScaleMapApicompanyGETApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDGETcompany5F9ADBF9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCompanyFunction40521299",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/GET/company"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/GET/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.GET..company"
   }
  },
  "ScaleMapApicompanyGET9784E0DD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer08CECD9F"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCompanyFunction40521299",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApicompanyE86C5AA2"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/company/GET/Resource"
   }
  },
  "ScaleMapApiassessmentC3736B5E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ScaleMapApi2204383E",
      "RootResourceId"
     ]
    },
    "PathPart": "assessment",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/Resource"
   }
  },
  "ScaleMapApiassessmentOPTIONSC8FBF396": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApiassessmentC3736B5E"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/OPTIONS/Resource"
   }
  },
  "ScaleMapApiassessmentPOSTApiPermissionScaleMapDevScaleMapApiE4F3E3DDPOSTassessment12D9A494": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateAssessmentFunction9342934F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/POST/assessment"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/POST/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.POST..assessment"
   }
  },
  "ScaleMapApiassessmentPOSTApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDPOSTassessment7A5E2F00": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CreateAssessmentFunction9342934F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/POST/assessment"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/POST/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.POST..assessment"
   }
  },
  "ScaleMapApiassessmentPOSTA148887C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer08CECD9F"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "CreateAssessmentFunction9342934F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApiassessmentC3736B5E"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/POST/Resource"
   }
  },
  "ScaleMapApiassessmentGETApiPermissionScaleMapDevScaleMapApiE4F3E3DDGETassessment19015E8C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAssessmentFunction53DE8AFB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/GET/assessment"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/GET/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.GET..assessment"
   }
  },
  "ScaleMapApiassessmentGETApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDGETassessment40BA6FDF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetAssessmentFunction53DE8AFB",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/GET/assessment"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/GET/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.GET..assessment"
   }
  },
  "ScaleMapApiassessmentGET1FE7CC79": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer08CECD9F"
    },
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetAssessmentFunction53DE8AFB",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApiassessmentC3736B5E"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/GET/Resource"
   }
  },
  "ScaleMapApiassessmentresponses1B5A68B6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ScaleMapApiassessmentC3736B5E"
    },
    "PathPart": "responses",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/responses/Resource"
   }
  },
  "ScaleMapApiassessmentresponsesOPTIONS54E7E8FB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApiassessmentresponses1B5A68B6"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/responses/OPTIONS/Resource"
   }
  },
  "ScaleMapApiassessmentresponsesPUTApiPermissionScaleMapDevScaleMapApiE4F3E3DDPUTassessmentresponses5B2B01A2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UpdateResponsesFunctionBF692635",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/PUT/assessment/responses"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/responses/PUT/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.PUT..assessment.responses"
   }
  },
  "ScaleMapApiassessmentresponsesPUTApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDPUTassessmentresponsesEC46383D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UpdateResponsesFunctionBF692635",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/PUT/assessment/responses"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/responses/PUT/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.PUT..assessment.responses"
   }
  },
  "ScaleMapApiassessmentresponsesPUTE7F381A0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer08CECD9F"
    },
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UpdateResponsesFunctionBF692635",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApiassessmentresponses1B5A68B6"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/assessment/responses/PUT/Resource"
   }
  },
  "ScaleMapApidocumentsF359908A": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "ScaleMapApi2204383E",
      "RootResourceId"
     ]
    },
    "PathPart": "documents",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/documents/Resource"
   }
  },
  "ScaleMapApidocumentsOPTIONSA3A85304": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApidocumentsF359908A"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/documents/OPTIONS/Resource"
   }
  },
  "ScaleMapApidocumentsupload9463C0ED": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "ScaleMapApidocumentsF359908A"
    },
    "PathPart": "upload",
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/documents/upload/Resource"
   }
  },
  "ScaleMapApidocumentsuploadOPTIONS2F20AF31": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "ScaleMapApidocumentsupload9463C0ED"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/documents/upload/OPTIONS/Resource"
   }
  },
  "ScaleMapApidocumentsuploadPOSTApiPermissionScaleMapDevScaleMapApiE4F3E3DDPOSTdocumentsupload0CDACB12": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UploadHandlerFunction1DEB4309",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/",
       {
        "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
       },
       "/POST/documents/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/documents/upload/POST/ApiPermission.ScaleMapDevScaleMapApiE4F3E3DD.POST..documents.upload"
   }
  },
  "ScaleMapApidocumentsuploadPOSTApiPermissionTestScaleMapDevScaleMapApiE4F3E3DDPOSTdocumentsupload0F1AAFD1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UploadHandlerFunction1DEB4309",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:eu-west-1:884337373956:",
       {
        "Ref": "ScaleMapApi2204383E"
       },
       "/test-invoke-stage/POST/documents/upload"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/documents/upload/POST/ApiPermission.Test.ScaleMapDevScaleMapApiE4F3E3DD.POST..documents.upload"
   }
  },
  "ScaleMapApidocumentsuploadPOST8F5412FD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "JwtAuthorizer08CECD9F"
    },
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UploadHandlerFunction1DEB4309",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "ScaleMapApidocumentsupload9463C0ED"
    },
    "RestApiId": {
     "Ref": "ScaleMapApi2204383E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ScaleMapApi/Default/documents/upload/POST/Resource"
   }
  },
  "ApiErrorAlarmD3E841A2": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmName": "scalemap-api-errors-dev",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "ApiName",
      "Value": "ScaleMap API - dev"
     }
    ],
    "EvaluationPeriods": 2,
    "MetricName": "5XXError",
    "Namespace": "AWS/ApiGateway",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 10,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/ApiErrorAlarm/Resource"
   }
  },
  "LambdaErrorAlarm646BFA4C": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmName": "scalemap-lambda-errors-dev",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "FunctionName",
      "Value": {
       "Ref": "HealthFunction19D7724A"
      }
     }
    ],
    "EvaluationPeriods": 2,
    "MetricName": "Errors",
    "Namespace": "AWS/Lambda",
    "Period": 300,
    "Statistic": "Sum",
    "Threshold": 5,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/LambdaErrorAlarm/Resource"
   }
  },
  "CostAlarm97D2533C": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmName": "scalemap-cost-dev",
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "Dimensions": [
     {
      "Name": "Currency",
      "Value": "USD"
     }
    ],
    "EvaluationPeriods": 1,
    "MetricName": "EstimatedCharges",
    "Namespace": "AWS/Billing",
    "Period": 300,
    "Statistic": "Maximum",
    "Threshold": 50,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CostAlarm/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/22QwU7DMAyGn2X3zGyFC8duiBOI0e0+uanXZU2TUidUJeq7o6Sb2IHT/zlW8tnJIFs/wWqBAy9l1Sy1KiHsHcpG4MDHUI0GW1uVEA5YahLbk0kwCX6EsPGyIRcPrzTHBpkmobEtK4SwPZkd9a1iVtaIV2+ki7A9mRtPgr8YwqcnnwwJJqGwhVDY2ZpyZ7WSYyxnilMckZkcQx5DaFszvNm6IEcmebBTNToacIRwsA2Z3Luz7dUP9fGhu6ogdnmnku0PcymtN068UKft2JJJ+95Ve4d1GnGGgtj6XlL8BPFO7myr2LzSrXuVJJ6E1NZXAzp5hpBr7NskjjBN/14RadsoVKaOjQ/vOu8mYWxFcOGH7yyD9TOsFhdWatl741RLUMz5C1rYxzL1AQAA"
   },
   "Metadata": {
    "aws:cdk:path": "ScaleMapDev/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "ScaleMapApiEndpoint901AFFC5": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ScaleMapApi2204383E"
      },
      ".execute-api.eu-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
      },
      "/"
     ]
    ]
   }
  },
  "ApiUrl": {
   "Description": "API Gateway URL for dev",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "ScaleMapApi2204383E"
      },
      ".execute-api.eu-west-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "ScaleMapApiDeploymentStageprodF4DD3120"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "ScaleMap-ApiUrl-dev"
   }
  },
  "TableName": {
   "Description": "DynamoDB table name for dev",
   "Value": {
    "Ref": "ScaleMapTableD1C6C54B"
   },
   "Export": {
    "Name": "ScaleMap-TableName-dev"
   }
  },
  "DocumentsBucketName": {
   "Description": "S3 bucket name for documents in dev",
   "Value": {
    "Ref": "DocumentsBucket9EC9DEB9"
   },
   "Export": {
    "Name": "ScaleMap-DocumentsBucket-dev"
   }
  },
  "DlqUrl": {
   "Description": "Dead letter queue URL for dev",
   "Value": {
    "Ref": "DeadLetterQueue9F481546"
   },
   "Export": {
    "Name": "ScaleMap-DlqUrl-dev"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}